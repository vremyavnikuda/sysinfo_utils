<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/../Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8ac7b28f-2f9d-475c-8f92-7e2e1ebe0232" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:test" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;vremyavnikuda&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:vremyavnikuda/system_info.git&quot;,
    &quot;accountId&quot;: &quot;a5452245-f0e1-49ae-aff8-27da5d993352&quot;
  }
}</component>
  <component name="JsbtTreeLayoutManager">
    <layout place="tools.popupGrunt">
      <scroll-view-position x="0" y="0" />
    </layout>
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="0OQM2oYr" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2rAcYOOWJa1CYjCQDx35r2bD6B0" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Cargo.Build `Test system_version::tests`.executor": "Run",
    "Cargo.Test architecture::tests.executor": "Run",
    "Cargo.Test architecture::tests::test_get_success.executor": "Run",
    "Cargo.Test bit_depth::tests.executor": "Run",
    "Cargo.Test imp::tests.executor": "Run",
    "Cargo.Test system_matcher::tests.executor": "Run",
    "Cargo.Test system_os::tests::test_info_display.executor": "Run",
    "Cargo.Test system_version::tests.executor": "Debug",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.rust.reset.selective.auto.import": "true",
    "com.codeium.enabled": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/home/vremyavnikuda/repository/system_info/system_info",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.first.attach.projects": "true",
    "settings.editor.selected.configurable": "com.github.copilot.settings.ApplicationConfigurable",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "GitStage.ChangesTree.GroupingKeys": [
      "directory",
      "module",
      "repository"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Cargo.Test system_matcher::tests">
    <configuration name="Run system_cli" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package system_cli --bin system_cli" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run system_info" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package system_info --bin system_info" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test bit_depth::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package system_info --lib bit_depth::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test imp::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package system_info --lib imp::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test system_info" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="buildProfileId" value="test" />
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test system_matcher::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package system_info --lib system_matcher::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test system_os::tests::test_info_display" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package system_info --lib system_os::tests::test_info_display -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test system_version::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package system_info --lib system_version::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/.." />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test system_matcher::tests" />
        <item itemvalue="Cargo.Test imp::tests" />
        <item itemvalue="Cargo.Test system_os::tests::test_info_display" />
        <item itemvalue="Cargo.Test bit_depth::tests" />
        <item itemvalue="Cargo.Test system_version::tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="/usr/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8ac7b28f-2f9d-475c-8f92-7e2e1ebe0232" name="Changes" comment="" />
      <created>1736005366308</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1736005366308</updated>
      <workItem from="1736005367364" duration="8873000" />
      <workItem from="1736014258766" duration="522000" />
      <workItem from="1736014795572" duration="4540000" />
      <workItem from="1736055743702" duration="2000" />
      <workItem from="1736059064732" duration="28537000" />
    </task>
    <task id="LOCAL-00001" summary="- Add `Type` enum in `src/system_os.rs` to represent various operating systems.&#10;- Implement `Info` struct in `src/system_info.rs` to store system information.&#10;- Add `get` function in `src/architecture.rs` to retrieve system architecture.&#10;- Implement `SystemVersion` enum in `src/system_version.rs` to represent OS versions.&#10;- Add `BitDepth` enum in `src/bit_depth.rs` to represent system bit depth.&#10;- Update `src/lib.rs` to include new modules and provide a `get` function to retrieve system info.&#10;- Add tests for `SystemVersion` and `BitDepth` enums.&quot;">
      <option name="closed" value="true" />
      <created>1736013266899</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1736013266899</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="- Add `Type` enum in `src/system_os.rs` to represent various operating systems.&#10;- Implement `Info` struct in `src/system_info.rs` to store system information.&#10;- Add `get` function in `src/architecture.rs` to retrieve system architecture.&#10;- Implement `SystemVersion` enum in `src/system_version.rs` to represent OS versions.&#10;- Add `BitDepth` enum in `src/bit_depth.rs` to represent system bit depth.&#10;- Update `src/lib.rs` to include new modules and provide a `get` function to retrieve system info.&#10;- Add tests for `SystemVersion` and `BitDepth` enums.&quot;" />
    <option name="LAST_COMMIT_MESSAGE" value="- Add `Type` enum in `src/system_os.rs` to represent various operating systems.&#10;- Implement `Info` struct in `src/system_info.rs` to store system information.&#10;- Add `get` function in `src/architecture.rs` to retrieve system architecture.&#10;- Implement `SystemVersion` enum in `src/system_version.rs` to represent OS versions.&#10;- Add `BitDepth` enum in `src/bit_depth.rs` to represent system bit depth.&#10;- Update `src/lib.rs` to include new modules and provide a `get` function to retrieve system info.&#10;- Add tests for `SystemVersion` and `BitDepth` enums.&quot;" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>